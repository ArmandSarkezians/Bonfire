generator client {
  provider = "prisma-client-js"
  engineType = "binary"
  binaryTargets = ["native"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  username   String
  first_name String
  last_name  String
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt
  cards      Card[]
  boards     UserBoard[]
}

model Board {
  id         Int         @id @default(autoincrement())
  title      String
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt
  states     State[]
  users      UserBoard[]
}

model UserBoard {
  board_id Int
  user_id  Int
  role     Role  @default(owner)
  board    Board @relation(fields: [board_id], references: [id])
  user     User  @relation(fields: [user_id], references: [id])
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt

  @@id([board_id, user_id])
  @@index([board_id], name: "UserBoard_board_id_fkey")
  @@index([user_id], name: "UserBoard_user_id_fkey")
}

model State {
  id         Int      @id @default(autoincrement())
  board_id   Int
  title      String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  board      Board    @relation(fields: [board_id], references: [id])
  cards      Card[]

  @@index([board_id], name: "State_board_id_fkey")
}

model Card {
  id              Int       @id @default(autoincrement())
  title           String
  desc            String?
  created_at      DateTime  @default(now())
  updated_at     DateTime  @updatedAt
  due_date        DateTime?
  submit_url      String?
  creator_user_id Int
  state_id        Int
  creator         User      @relation(fields: [creator_user_id], references: [id])
  state           State     @relation(fields: [state_id], references: [id])

  @@index([creator_user_id], name: "Card_creator_user_id_fkey")
  @@index([state_id], name: "Card_state_id_fkey")
}

enum Role {
  owner
  editor
  viewer
}
